env:
  global:
  - secure: f1Dkf/AObhtZJf/OtM/NREIZRzVeuw/QXQkV82WrbszKdpLrm1RwfwTAgcUa+JDiE931LJ41W86JWUia3PbS3pLVSL9gSwfBPk+PU6VM7AeYIVuje1V1tXpZoGlf+0RcfGHZA3JzeNSo65QjKl5iUxrT31wnpQpQ9rdG/bXQrUg=
  - secure: Xjc2qZs42LLIk4lRMc/JdFxeN5pmXUTLFd/stohOTX3g1rmRInXXqYpnXW/S15FjShqgtQAvvmnU/SV9QNpfaMhQVgS1ORVTS10gvy3aLPodW5hB9AGCDiQHXD0r9p+73LfNzenvdtmDme9Pp8PdLwb+spSroRbXgJ3tqHpXntM=
  - secure: n7FDSdDI6AlTIe91ZFfaWA89PloZGjR36M2U1XZwKK9FMFDHRJMORmW30veV1OuC6e7/F/56MpQ+PHMKeeBPdTEIQRJeCTwyLTkIQ8eh18oVE6M9pdXNrUlhLf5dejXk2kAl3vWe8LBC+x1pWsql0mb8AAkdLwQfRddPlCbkRHY=
  - WEB_PORT_80_TCP_ADDR=localhost

language: php

sudo: required
dist: trusty

php:
    - 7.0

addons:
  sauce_connect: true
  hosts:
    - local.dev
    
cache:
  - apt

before_install:

  # Install Apache2
  - sudo apt-get update
  - sudo apt-get install -y --force-yes apache2
  # Add PHP 7.0 Repository
  - sudo add-apt-repository -y ppa:ondrej/php
  # Install PHP 7.0
  - sudo apt-get update
  - sudo apt-get install -y --force-yes php7.0 libapache2-mod-php7.0 php7.0-fpm
  # Copy our virtual host template to sites-enabled overwriting the default site conf
  - sudo cp ci/travis/defaultsite.tpl /etc/apache2/sites-available/000-default.conf
  # Copy basic testing files into /var/www
  - sudo cp www/info.php /var/www/info.php
  - sudo cp www/apache.php /var/www/apache.php
  # Enable mod rewrite module
  - sudo a2enmod rewrite
  # Set ServerName Globally
  - sudo cp ci/travis/servername.tpl /etc/apache2/conf-available/servername.conf
  # Restart apache
  - sudo service apache2 restart
  # Restart PHP
  - sudo service php7.0-fpm restart


  - sudo cp -f ci/travis/test.php /var/www/test.php
  - sudo cp -f ci/travis/test.html /var/www/test.html
  
before_script:
  - npm install -g se-interpreter
  - mysql -e 'create database formulize;'
  # Uncomment the next three lines to initialize the database as if all existing tests have run.
  # The next two setup the environment as if the installer has completed.
  # This is useful for quickly running just one new test, to see if it is working.
  # Alter the ci/travis/interpreter_config.json file to refer to your one test by name
  # instead of referring to * for all tests.
  #- mysql formulize < ci/formulize_test_db.sql
  #- sudo cp -f ci/mainfile.php mainfile.php
  #- sudo cp -f ci/0dd528b71d72ed19bb9dd658ab2dad58.php selenium-848d24bb54d726d/0dd528b71d72ed19bb9dd658ab2dad58.php
  - echo "USE mysql;\nUPDATE user SET password=PASSWORD('password') WHERE user='root';\nFLUSH PRIVILEGES;\n" | mysql -u root

script:
  - se-interpreter ci/travis/interpreter_config.json
  - cat "error.log"
  - curl http://localhost/index.php
  - curl http://localhost/test.php
  - curl http://localhost/test.html
  - curl http://localhost/

after_script:
  # Include '[update test db]' in a commit message from the master branch, if you want
  # to reset the ci/formulize_test_db.sql to be based on all the current tests.
  # ONLY DO THIS WITH COMMITS FROM THE MASTER BRANCH!!
  # DO NOT DO THIS IN A BRANCH THAT HAS AN ACTIVE PULL REQUEST!!
  - COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')
  - if test "${COMMIT_MESSAGE#*'[update test db]'}" != "$COMMIT_MESSAGE"; then bash ci/travis/update-test-db.sh; fi;